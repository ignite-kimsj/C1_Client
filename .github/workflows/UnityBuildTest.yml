name: UnityBuildTest

on:
  workflow_dispatch:

permissions: write-all
  
jobs:
  #Job ÏÑ§Ï†ï
  buildForAndroid: 
    name: Build Androidüõ∏üõ∏üõ∏
    runs-on: ubuntu-latest
    steps:

      # Step1 - Check Out
      - name: Check Out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Step2 - Cache Library
      - name: Cache Library
        uses: actions/cache@v4.0.2
        with: 
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Step3 - Unity Build
      - name: Unity Build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android
      
      # Step4 - Upload Build File
      - name: Upload Build File
      - uses: actions/upload-artifact@v3
        with:
          name: Build-Android
          path: build

      # Step5 - Notify To Slack
      - name: Notify To Slack
        if: always()
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: custom
          fields: workflow,job,repo,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `*ÎπåÎìú Í≤∞Í≥º*: ${{ job.status }}\n\n *Workflow*: ${process.env.AS_WORKFLOW}\n\n *Repository*: ${process.env.AS_REPO}\n\n*Ïã§ÌñâÌïú ÏÇ¨Îûå*: ${process.env.AS_AUTHOR}\n\n*Ïã§Ìñâ ÏãúÍ∞Ñ*: ${process.env.AS_TOOK}\n\n *ÎπåÎìú ÌååÏùº*: <${{ env.URL }}|${{ env.URLTEXT }}>`,
                mrkdwn_in: ["text"],
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
